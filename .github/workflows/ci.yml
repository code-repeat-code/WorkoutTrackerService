name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger on push to master
  pull_request:
    branches:
      - master  # Trigger on PRs to master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up .NET SDK
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      # Step 3: Restore dependencies
      - name: Restore dependencies
        run: dotnet restore WorkoutTrackerServices/WorkoutTrackerServices.csproj

      # Step 4: Build
      - name: Build
        run: dotnet build WorkoutTrackerServices/WorkoutTrackerServices.csproj --configuration Release --no-restore

      # Step 5: (Optional) Run Tests
      # Uncomment if you add unit tests
      # - name: Run Tests
      #   run: dotnet test WorkoutTrackerServices/WorkoutTrackerServices.csproj --configuration Release --no-build

      # Step 6: Publish
      - name: Publish
        run: dotnet publish WorkoutTrackerServices/WorkoutTrackerServices.csproj --configuration Release --output ./publish

      # Step 7: Docker Build
      - name: Build Docker Image
        run: docker build --platform linux/amd64 -t ak1905/workouttrackerservice:prod -f WorkoutTrackerServices/Dockerfile .

      # Step 8: Docker Login
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 9: Push Docker Image
      - name: Push Docker Image to Docker Hub
        run: docker push ak1905/workouttrackerservice:prod